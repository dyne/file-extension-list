#!/usr/bin/env sh

# SPDX-FileCopyrightText: 2021 Robin Vobruba <hoijui.quaero@gmail.com>
# SPDX-FileCopyrightText: 2020 Jaromil <jaromil@dyne.org>
# SPDX-FileCopyrightText: 2020 Puria Nafisi Azizi <puria@dyne.org>
#
# SPDX-License-Identifier: Unlicense

# This is free and unencumbered software released into the public domain.

# This script generates an other script,
# which resolves a single file extension
# to the (main) category.

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
#set -Eeuo pipefail
set -eu

script_dir=$(dirname "$(readlink -f "$0")")

# cd to the project root
cd "$script_dir/.."

parser_file="build/ext2cat"
mkdir -p build

{
	cd data

	grep -r -v '%$' ./*.csv \
		| sed -e 's|^\./||' -e 's/\.csv//' -e 's/,.*$//' \
		| sort \
		| awk -F : -e '
			BEGIN {
				prev_cat=""
				first_cat=1
				printf "#!/usr/bin/env sh\n"
				printf "# File extension to category resolver."
				printf "# Generated by file-extension-list.\n"
				printf "# See: https://github.com/dyne/file-extension-list\n"
				printf "\n"
				printf "set -e\n"
				printf "\n"
				printf "ext=\"$1\"\n"
				printf "if [ -z \"$ext\" ] \n"
				printf "then\n"
				printf "\t>&2 echo \"%s\"\n\t\texit 1\n", "Usage: $0 [FILE-EXT]"
				printf "\t\n"
				printf "fi\n"
				printf "\n"
				printf "case \"$ext\" in\n"
			}
			{
				ext=$2
				cat=$1
				if (cat == prev_cat) {
					printf "|%s", ext
				} else {
					if (!first_cat) {
						printf ")\n\t\techo \"%s\"\n\t\t;;\n", prev_cat
					}
					printf "\t%s", ext
				}
				prev_cat=cat
				first_cat=0
			}
			END {
				printf ")\n\t\techo \"%s\"\n\t\t;;\n", prev_cat
				printf "\t*)\n\t\t>&2 echo \"%s\"\n\t\texit 1\n", "Unknown file extension: $ext"
				printf "esac\n"
			}
		'

	cd ..
} > "$parser_file"

chmod +x "$parser_file"

