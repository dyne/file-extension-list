#!/usr/bin/env zsh

# This is free and unencumbered software released into the public domain.

# This parser also counts duplicates

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

parser_file="file-extension-parser.zsh"

script_dir_rel="$(dirname "$0")"
proj_dir_abs="$(cd $script_dir_rel; cd ..; pwd)"
print "$proj_dir_abs"

cat <<EOF > "$parser_file"
#!/usr/bin/env zsh
# parser generated by file-extension-list
# see: https://github.com/dyne/file-extension-list

function file-extension-parser() {
    ext=\${1##*.}
    case \${ext:l} in
EOF

for coll in ${(f)"$(find "$proj_dir_abs/data" -type f)"}; do
	name=${coll##*/}
	print -n "$name:"
	caselist=""
	for i in ${(f)"$(cat $coll)"}; do
		print -n " $i"
		caselist+="$i|"
	done
	print
	caselist[${#caselist}]=")"
	print "        $caselist" >> "$parser_file"
	print "            print $name ;;" >> "$parser_file"
done

# end of switch case and function in script
cat <<EOF >> "$parser_file"
        *) print other ;;
	esac
}

EOF
print
print "'$parser_file' generated."
